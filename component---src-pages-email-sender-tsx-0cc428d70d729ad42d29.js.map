{"version":3,"sources":["webpack://@greenpool-eco/site/./src/components/modal/layout.tsx","webpack://@greenpool-eco/site/./src/pages/email-modal.tsx","webpack://@greenpool-eco/site/./src/pages/email-sender.tsx","webpack://@greenpool-eco/site/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Layout","backText","children","isOpen","container","isBrowser","document","body","onClose","ReactDOM","className","onClick","EmailModal","EmailSender","obj","TypeError","React","setIsOpen","handleOpen","handleClose","EmailInput","onConfirm"],"mappings":"yOAcaA,EAAgC,SAAC,GAMvC,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,SAII,IAHJC,cAGI,aAFJC,iBAEI,OAFQC,SAAcC,SAASC,KAAO,KAEtC,EADJC,EACI,EADJA,QAEA,OAAKL,GAAuB,MAAbC,EAIRK,eACL,uBAAKC,UAAW,uBACd,gBAAC,KAAD,CAAMA,UAAW,gBACdR,EACD,gBAAC,KAAD,CAAQS,QAASH,GAAUP,IAG7B,uBAAKS,UAAU,oCAEjBN,GAZO,MCbEQ,EAAwC,SAAC,GAAyB,IAAvBT,EAAsB,EAAtBA,OAAQK,EAAc,EAAdA,QAC9D,OACE,gBAAC,EAAD,CAAcP,SAAU,UAAWE,OAAQA,EAAQK,QAASA,GAC1D,uBAAKE,UAAU,iBACb,gBAAC,KAAD,MACA,sBAAIA,UAAW,wBAAf,WACA,sE,qHCTKG,EAA0C,SAAC,ICNzC,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDKyB,IAC9D,MAA4BC,YAAe,GAApCb,EAAP,KAAec,EAAf,KAEMC,EAAaF,eAAkB,WACnCC,GAAU,KACT,CAACA,IAEEE,EAAcH,eAAkB,WACpCC,GAAU,KACT,CAACA,IAEJ,OACE,gCACE,gBAAC,EAAAG,WAAD,CAAYC,UAAWH,IACvB,gBAAC,EAAAN,WAAD,CAAYT,OAAQA,EAAQK,QAASW","file":"component---src-pages-email-sender-tsx-0cc428d70d729ad42d29.js","sourcesContent":["import { Button, Card } from \"@greenpool-eco/components\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./styles.scss\";\nimport { isBrowser } from \"utils/is-browser\";\n\ntype LayoutProps = {\n  backText: string;\n  isOpen?: boolean;\n  container?: Element;\n  onClose: () => void;\n};\n\nexport const Layout: React.FC<LayoutProps> = ({\n  backText,\n  children,\n  isOpen = true,\n  container = isBrowser() ? document.body : null,\n  onClose,\n}) => {\n  if (!isOpen || container == null) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(\n    <div className={\"modal modal_overlay\"}>\n      <Card className={\"modal__card \"}>\n        {children}\n        <Button onClick={onClose}>{backText}</Button>\n      </Card>\n\n      <div className=\"modal-background modal_overlay\" />\n    </div>,\n    container\n  );\n};\n","import * as Icons from \"components/icons\";\nimport * as Modal from \"components/modal\";\nimport * as React from \"react\";\n\ntype EmailModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nexport const EmailModal: React.FC<EmailModalProps> = ({ isOpen, onClose }) => {\n  return (\n    <Modal.Layout backText={\"Go Back\"} isOpen={isOpen} onClose={onClose}>\n      <div className=\"success-modal\">\n        <Icons.Check />\n        <h3 className={\"success-modal__title\"}>Success</h3>\n        <p>A message has been sent to your email</p>\n      </div>\n    </Modal.Layout>\n  );\n};\n","import { EmailInput } from \"pages/email-input\";\nimport { EmailModal } from \"pages/email-modal\";\nimport * as React from \"react\";\n\ntype EmailSenderProps = {};\n\nexport const EmailSender: React.FC<EmailSenderProps> = ({}) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleOpen = React.useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const handleClose = React.useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  return (\n    <>\n      <EmailInput onConfirm={handleOpen} />\n      <EmailModal isOpen={isOpen} onClose={handleClose} />\n    </>\n  );\n};\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}