{"version":3,"sources":["webpack://@greenpool-eco/site/./node_modules/@babel/runtime/regenerator/index.js","webpack://@greenpool-eco/site/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@greenpool-eco/site/./src/components/input-form/input-form.tsx","webpack://@greenpool-eco/site/./src/utils/email-validator.ts","webpack://@greenpool-eco/site/./node_modules/react-axios-effect/dist/react-axios-effect.esm.js","webpack://@greenpool-eco/site/./src/utils/use-query.ts","webpack://@greenpool-eco/site/./src/pages/email-input.tsx","webpack://@greenpool-eco/site/./node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","defaultOnChange","InputForm","placeholder","submitText","onChange","onSubmit","disabled","handleChange","React","event","preventDefault","currentTarget","handleSubmit","className","type","change","submit","emailRegexp","handleRejected","useQuery","effect","deps","isLoading","setIsLoading","startLoading","useEffect","cancelTokenSource","token","catch","response","cancel","useAxiosEffect","cancelToken","console","EmailInput","onConfirm","t","useI18next","email","setEmail","useSendEmail","isValid","test","sendEmail","axios","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"92cd97f3e17e4f63343b24fb1c1e30e85ce60b0c-10b6a087b8a089dfafb3.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { Button } from \"@greenpool-eco/components\";\nimport * as React from \"react\";\nimport \"./styles.scss\";\n\nexport type InputProps = {\n  placeholder: string;\n  value: string;\n  submitText: string;\n  onChange?: (value: string) => void;\n  onSubmit: () => void;\n  disabled?: {\n    change?: boolean;\n    submit?: boolean;\n  };\n};\n\nconst defaultOnChange = (value: string) => value;\n\nexport const InputForm: React.FC<InputProps> = ({\n  placeholder,\n  value,\n  submitText,\n  onChange = defaultOnChange,\n  onSubmit,\n  disabled,\n}) => {\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault();\n\n      onChange(event.currentTarget.value);\n    },\n    [onChange]\n  );\n\n  const handleSubmit = React.useCallback(\n    (event: React.FormEvent) => {\n      event.preventDefault();\n\n      onSubmit();\n    },\n    [onSubmit, value]\n  );\n\n  return (\n    <form className={\"input-form\"} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input-form__input\"\n        value={value}\n        onChange={handleChange}\n        placeholder={placeholder}\n        disabled={disabled?.change}\n      />\n      <div className=\"input-form__action\">\n        <Button type={\"primary\"} disabled={disabled?.submit}>\n          {submitText}\n        </Button>\n      </div>\n    </form>\n  );\n};\n","const emailRegexp =\n  /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\nexport const emailValidator = (value: string) => emailRegexp.test(value);\n","import { useEffect } from 'react';\nimport axios from 'axios';\n\nvar handleRejected = function handleRejected(error) {\n  if (axios.isCancel(error)) {\n    return Promise.resolve();\n  }\n\n  return Promise.reject(error);\n};\n\nfunction useAxiosEffect(effect, deps) {\n  useEffect(function () {\n    var cancelTokenSource = axios.CancelToken.source();\n    effect(cancelTokenSource.token).catch(function (error) {\n      cancelTokenSource = undefined;\n      return Promise.reject(error);\n    }).then(function (response) {\n      cancelTokenSource = undefined;\n      return response;\n    }).catch(handleRejected);\n    return function () {\n      if (!cancelTokenSource) {\n        return;\n      }\n\n      cancelTokenSource.cancel();\n      cancelTokenSource = undefined;\n    };\n  }, deps);\n}\n\nexport { useAxiosEffect };","import { CancelToken } from \"axios\";\nimport * as React from \"react\";\nimport { useAxiosEffect } from \"react-axios-effect\";\n\ntype AsyncEffect = (cancelToken?: CancelToken) => Promise<void>;\n\nexport type StartLoading = () => void;\n\nexport const useQuery = (\n  effect: AsyncEffect,\n  deps: React.DependencyList\n): [StartLoading, boolean] => {\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const startLoading = React.useCallback(() => {\n    setIsLoading(true);\n  }, [setIsLoading]);\n\n  useAxiosEffect(\n    async (cancelToken) => {\n      if (isLoading) {\n        try {\n          await effect(cancelToken);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      setIsLoading(false);\n    },\n    [isLoading, ...deps]\n  );\n\n  return [startLoading, isLoading];\n};\n","import axios, { CancelToken } from \"axios\";\nimport { InputForm } from \"components/input-form\";\nimport { useI18next } from \"gatsby-plugin-react-i18next\";\nimport * as React from \"react\";\nimport { emailValidator } from \"utils/email-validator\";\nimport { useQuery } from \"utils/use-query\";\n\ntype EmailInputProps = {\n  onConfirm: () => void;\n};\n\nexport const EmailInput: React.FC<EmailInputProps> = ({ onConfirm }) => {\n  const { t } = useI18next(\"main\");\n\n  const [email, setEmail] = React.useState(\"\");\n\n  const [startLoading, isLoading] = useSendEmail(email, onConfirm);\n\n  const isValid = emailValidator(email);\n\n  return (\n    <div className=\"page-main__form\">\n      <InputForm\n        value={email}\n        placeholder={t(\"input.placeholder\")}\n        submitText={t(\"input.submit-text\")}\n        onSubmit={startLoading}\n        onChange={setEmail}\n        disabled={{\n          submit: isLoading || !isValid,\n          change: isLoading,\n        }}\n      />\n    </div>\n  );\n};\n\nconst useSendEmail = (email: string, onConfirm: () => void) => {\n  return useQuery(\n    async (cancelToken) => {\n      const response = await sendEmail(email, cancelToken);\n\n      onConfirm();\n\n      return response;\n    },\n    [email]\n  );\n};\n\nconst sendEmail = async (email: string, cancelToken?: CancelToken) => {\n  try {\n    await axios.post(\"/email\", { email }, { cancelToken });\n  } catch (error) {\n    console.error(error);\n  }\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}