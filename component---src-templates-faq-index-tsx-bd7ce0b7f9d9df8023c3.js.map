{"version":3,"sources":["webpack://@greenpool-eco/site/./src/components/accordion/layout.tsx","webpack://@greenpool-eco/site/./src/templates/faq/questions.tsx","webpack://@greenpool-eco/site/./src/templates/faq/aside.tsx","webpack://@greenpool-eco/site/./src/templates/faq/index.tsx"],"names":["Layout","className","title","children","isOpen","onToggle","handleToggle","React","classNames","onClick","Questions","items","onOpen","activeQuestion","map","question","QuestionItem","data","isActive","key","setIsOpen","lines","content","split","chunk","index","Aside","questions","amount","t","useI18next","frequentlyQuestions","slice","AsideItem","handleClick","pageContext","useQuestions","setActiveQuestion","language","find","item","locale","list","useSortQuestions","sort","left","right","frequency"],"mappings":"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","file":"component---src-templates-faq-index-tsx-bd7ce0b7f9d9df8023c3.js","sourcesContent":["import classNames from \"classnames\";\nimport * as Icons from \"components/icons\";\nimport * as React from \"react\";\n\nimport \"./styles.scss\";\n\ntype LayoutProps = {\n  className?: string;\n  title: string;\n  isOpen: boolean;\n  onToggle: (isOpen: boolean) => void;\n};\n\nexport const Layout: React.FC<LayoutProps> = ({\n  className,\n  title,\n  children,\n  isOpen,\n  onToggle,\n}) => {\n  const handleToggle = React.useCallback(() => {\n    onToggle(!isOpen);\n  }, [onToggle, isOpen]);\n\n  return (\n    <div\n      className={classNames(\n        \"accordion\",\n        isOpen && \"accordion_opened\",\n        className\n      )}\n    >\n      <div className=\"accordion__title\" onClick={handleToggle}>\n        <span className=\"accordion__title-inner\">{title}</span>\n        <Icons.Plus className=\"accordion__title-icon\" />\n      </div>\n      <div className=\"accordion__content\">{children}</div>\n    </div>\n  );\n};\n","import * as Accordion from \"components/accordion\";\nimport * as React from \"react\";\nimport { Question } from \"templates/faq/question\";\n\ntype QuestionsProps = {\n  items: Question[];\n  onOpen: (question: Question) => void;\n  activeQuestion?: Question;\n};\n\nexport const Questions: React.FC<QuestionsProps> = ({\n  items,\n  onOpen,\n  activeQuestion,\n}) => {\n  return (\n    <>\n      {items.map((question) => (\n        <QuestionItem\n          data={question}\n          isActive={question === activeQuestion}\n          onOpen={onOpen}\n          key={question.title}\n        />\n      ))}\n    </>\n  );\n};\n\ntype QuestionItemProps = {\n  data: Question;\n  onOpen: (question: Question) => void;\n  isActive: boolean;\n};\n\nexport const QuestionItem: React.FC<QuestionItemProps> = ({\n  data,\n  onOpen,\n  isActive,\n}) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsOpen(isActive);\n  }, [isActive]);\n\n  React.useEffect(() => {\n    if (isOpen) {\n      onOpen(data);\n    }\n  }, [isOpen, data, onOpen]);\n\n  const lines = React.useMemo(() => {\n    return data.content.split(\"\\n\");\n  }, [data.content]);\n\n  return (\n    <Accordion.Layout\n      title={data.title}\n      className={\"container-faq__question\"}\n      isOpen={isOpen}\n      onToggle={setIsOpen}\n    >\n      {lines.map((chunk, index) => (\n        <p key={index}>\n          {chunk}\n          <br />\n        </p>\n      ))}\n    </Accordion.Layout>\n  );\n};\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Question } from \"templates/faq/question\";\nimport { useI18next } from \"gatsby-plugin-react-i18next\";\n\ntype AsideProps = {\n  activeQuestion?: Question;\n  questions: Question[];\n  amount: number;\n  onClick: (question: Question) => void;\n};\n\nexport const Aside: React.FC<AsideProps> = ({\n  activeQuestion,\n  questions,\n  amount,\n  onClick,\n}) => {\n  const { t } = useI18next(\"faq\");\n  const frequentlyQuestions = questions.slice(0, amount);\n\n  return (\n    <div className=\"container-faq__aside\">\n      <div className=\"container-faq__aside-title\">{t(\"aside.title\")}</div>\n      <ul>\n        {frequentlyQuestions.map((question) => (\n          <AsideItem\n            question={question}\n            isActive={question === activeQuestion}\n            onClick={onClick}\n            key={question.title}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\ntype AsideItemProps = {\n  question: Question;\n  isActive: boolean;\n  onClick: (question: Question) => void;\n};\n\nexport const AsideItem: React.FC<AsideItemProps> = ({\n  question,\n  onClick,\n  isActive,\n}) => {\n  const handleClick = React.useCallback(() => {\n    onClick(question);\n  }, [question, onClick]);\n\n  return (\n    <li\n      key={question.title}\n      onClick={handleClick}\n      className={classNames(\n        \"container-faq__aside-item\",\n        isActive && \"container-faq__aside-item_active\"\n      )}\n    >\n      {question.title}\n    </li>\n  );\n};\n","import { graphql, PageProps } from \"gatsby\";\nimport { useI18next } from \"gatsby-plugin-react-i18next\";\nimport * as React from \"react\";\nimport { Questions } from \"templates/faq/questions\";\nimport { Aside } from \"./aside\";\nimport { Question } from \"./question\";\n\nimport \"./styles.scss\";\n\ntype QuestionDescriptor = {\n  list: Question[];\n  locale: string;\n};\n\ntype FAQPageProps = PageProps<\n  {},\n  {\n    questions: QuestionDescriptor[];\n  },\n  {}\n>;\n\nconst FAQPage: React.FC<FAQPageProps> = ({\n  pageContext: { questions: content },\n}) => {\n  const questions = useQuestions(content);\n\n  const [activeQuestion, setActiveQuestion] = React.useState<Question>();\n\n  return (\n    <section className=\"section\">\n      <div className=\"container container-faq\">\n        <Aside\n          onClick={setActiveQuestion}\n          activeQuestion={activeQuestion}\n          questions={questions}\n          amount={5}\n        />\n\n        <div className=\"container-faq__content\">\n          <Questions\n            onOpen={setActiveQuestion}\n            activeQuestion={activeQuestion}\n            items={questions}\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FAQPage;\n\nconst useQuestions = (content: QuestionDescriptor[]) => {\n  const { language } = useI18next();\n\n  const questions = React.useMemo(() => {\n    return content.find((item) => item.locale === language)?.list ?? [];\n  }, [language, content]);\n\n  return useSortQuestions(questions);\n};\n\nconst useSortQuestions = (questions: Question[]) => {\n  return React.useMemo(() => {\n    return [...questions].sort(\n      (left, right) => right.frequency - left.frequency\n    );\n  }, [questions]);\n};\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}